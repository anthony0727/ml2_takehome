version: '2.1'
services:
    redis:
        image: 'redis:5.0.5'
        # command: redis-server --requirepass redispass

    postgres:
        image: postgres:9.6
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
            - PGDATA=/var/lib/postgresql/data/pgdata
        # volumes:
            - ./pgdata:/var/lib/postgresql/data/pgdata

    webserver:
        image: airflow
        #restart: always
        depends_on:
            - postgres
            - redis
        environment:
            - LOAD_EX=n
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
              #- REDIS_PASSWORD=redispass
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./airflow_server/dags:/usr/local/airflow/dags
            - ./airflow_server/variables.json:/usr/local/airflow/variables.json
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        ports:
            - "8080:8080"
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    flower:
        image: airflow
        #restart: always
        depends_on:
            - redis
        environment:
            - EXECUTOR=Celery
              #- REDIS_PASSWORD=redispass
        ports:
            - "5555:5555"
        command: flower

    scheduler:
        image: airflow
        #restart: always
        depends_on:
            - webserver
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./airflow_server/dags:/usr/local/airflow/dags
            - ./airflow_server/variables.json:/usr/local/airflow/variables.json
        environment:
            - LOAD_EX=n
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        command: scheduler

    worker:
        image: airflow
        #restart: always
        depends_on:
            - scheduler
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./airflow_server/dags:/usr/local/airflow/dags
            - ./airflow_server/variables.json:/usr/local/airflow/variables.json
        environment:
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
              #- REDIS_PASSWORD=redispass
        command: worker

        #train_server:
        #image: train_server:latest
        #build: ./train_server
        #tty: true
        #stdin_open: true
        #volumes:
        #    - /var/run/docker.sock:/var/run/docker.sock
        #    - ./models:/home/models
        #      #- ./train_server/app:/home/app

    tensorflow_serving:
        image: tensorflow/serving
        ports:
            - '8500:8500'
            - '8501:8501'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./models/tensorflow:/models/lenet5
        environment:
            - 'MODEL_NAME=lenet5'

    torchserve:
        image: pytorch/torchserve
        ports:
            - '8081:8080'
            - '8082:8081'
            - '8083:8082'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./models/pytorch/lenet5_pytorch.mar:/home/model-server/model-store/lenet5_pytorch.mar
            - ./models/libtorch/lenet5_libtorch.mar:/home/model-server/model-store/lenet5_libtorch.mar
        command: torchserve --start --ncs --model-store /home/model-server/model-store --models lenet5_pytorch=lenet5_pytorch.mar lenet5_libtorch=lenet5_libtorch.mar
